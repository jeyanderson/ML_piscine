import pandas as pd
import numpy as np
from mylinearregression import MyLinearRegression as MLR
from  polynomial_model import  add_polynomial_features
import matplotlib.pyplot as plt

df=pd.read_csv('../resources/are_blue_pills_magics.csv')
x=np.array(df['Micrograms']).reshape(-1,1)
y=np.array(df['Score']).reshape(-1,1)
mse_list=[]
print('Training first model with polynomial degree 1.')
myLR1=MLR([1,-1],alpha=0.01,max_iter=1000000)
myLR1.fit_(x,y)
pred=myLR1.predict_(x)
mse=myLR1.mse_(y,pred)
mse_list.append(mse)

print('Training first model with polynomial degree 2.')
myLR2=MLR(np.ones(3).reshape(-1,1),alpha=0.001,max_iter=1000000)
polyX=add_polynomial_features(x,2)
myLR2.fit_(polyX,y)
pred=myLR2.predict_(polyX)
mse=myLR2.mse_(y,pred)
mse_list.append(mse)

print('Training first model with polynomial degree 3.')
myLR3=MLR(np.ones(4).reshape(-1,1),alpha=0.00001,max_iter=1000000)
polyX=add_polynomial_features(x,3)
myLR3.fit_(polyX,y)
pred=myLR3.predict_(polyX)
mse=myLR3.mse_(y,pred)
mse_list.append(mse)

print('Training first model with polynomial degree 4.')
theta4 = np.array([[-20], [160], [-80], [10], [-1]])
myLR4=MLR(theta4,alpha=0.000001,max_iter=1000000)
polyX=add_polynomial_features(x,4)
myLR4.fit_(polyX,y)
pred=myLR4.predict_(polyX)
mse=myLR4.mse_(y,pred)
mse_list.append(mse)

print('Training first model with polynomial degree 5.')
theta5 = np.array([[1140], [-1850], [1110], [-305], [40], [-2]])
myLR5=MLR(theta5,alpha=0.00000001,max_iter=1000000)
polyX=add_polynomial_features(x,5)
myLR5.fit_(polyX,y)
pred=myLR5.predict_(polyX)
mse=myLR5.mse_(y,pred)
mse_list.append(mse)

print('Training first model with polynomial degree 6.')
theta6 = np.array([[9110], [-18015], [13400], [-4935], [966], [-96.4], [3.86]])
myLR6=MLR(theta6,alpha=0.0000000001,max_iter=1000000)
polyX=add_polynomial_features(x,6)
myLR6.fit_(polyX,y)
pred=myLR6.predict_(polyX)
mse=myLR6.mse_(y,pred)
mse_list.append(mse)

plt.bar(np.arange(1,7),mse_list)
plt.show()

plt.ylabel('Score')
plt.scatter(x,y,label='True values',color='black')
continuous_x=np.linspace(x.min(),x.max(),1000).reshape(-1,1)

pred1=myLR1.predict_(continuous_x)
plt.plot(continuous_x,pred1,label='Model 1',color='lime')
polyX=add_polynomial_features(continuous_x,2)
pred2=myLR2.predict_(polyX)
plt.plot(continuous_x,pred2,label='Model 2',color='red')
polyX=add_polynomial_features(continuous_x,3)
pred3=myLR3.predict_(polyX)
plt.plot(continuous_x,pred3,label='Model 3',color='magenta')
polyX=add_polynomial_features(continuous_x,4)
pred4=myLR4.predict_(polyX)
plt.plot(continuous_x,pred4,label='Model 4',color='blue')
polyX=add_polynomial_features(continuous_x,5)
pred5=myLR5.predict_(polyX)
plt.plot(continuous_x,pred5,label='Model 5',color='darkorange')
polyX=add_polynomial_features(continuous_x,6)
pred6=myLR6.predict_(polyX)
plt.plot(continuous_x,pred6,label='Model 6',color='darkgrey')
plt.show()